@model LabAssignment1.Models.SignUpViewModel

@{
    ViewData["Title"] = "SignUp";
    Layout = "~/Views/Shared/_Layout.cshtml";    
}

<h1>SignUp</h1>

<h4>Assignment-1</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="SignUp">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UserName" class="control-label"></label>
                <input asp-for="UserName" class="form-control" />
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ConfirmPassword" class="control-label"></label>
                <input asp-for="ConfirmPassword" class="form-control" />
                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Contact" class="control-label"></label>
                <input asp-for="Contact" class="form-control" />
                <span asp-validation-for="Contact" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CountryId" class="control-label"></label>
                <select asp-for="CountryId"
                        class="form-control"
                        asp-items="@(new SelectList(Model.Countries,"Value","Text"))">
                        <option disabled selected>---Select Country---</option>
                    </select>                
                <span asp-validation-for="CountryId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="cityId" class="control-label"></label>
                <select asp-for="cityId" class="form-control">
                    <option disabled selected>---Select City---</option>                    
                </select>
                <span asp-validation-for="cityId" class="text-danger"></span>
            </div>
            <div class="form-group">
                Gender :
                @foreach (var sex in Model.GenderList)
                {
                    @*@Html.RadioButtonFor(model => model.Gender, new { id = "sex" + sex.Value })
                        @Html.Label("sex" + sex.Value, sex.Text)
                    *@
                    <input type="radio" id="@sex.Value" name="Gender" value="@sex.Text" asp-for="Gender">
                    <label for="@sex.Text">@sex.Text</label>

                }
                <span asp-validation-for="Gender" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="AcceptTerms" /> @Html.DisplayNameFor(model => model.AcceptTerms)
                </label>
                <span asp-validation-for="AcceptTerms" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@*@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
*@


@section Scripts{
<partial name="_ValidationScriptsPartial" />

<script>
       jQuery.validator.unobtrusive.adapters.add("checkbox", function (options) {
        if (options.element.tagName.toUpperCase() == "INPUT" && options.element.type.toUpperCase() == "CHECKBOX") {
            options.rules["required"] = true;
            if (options.message) {
                options.messages["required"] = options.message;
            }
        }
    });

    $("select#CountryId").change(function(){
        
        var countryId = $(this).val();

        debugger;
        console.log(countryId);

            $.getJSON(`/User/ChangeCityByCountry?countryId=${countryId}`,function(data){                  
            $("select#cityId").empty();
                 $("select#cityId").append(`<option disabled selected>--- Select City ---</option>`);
                 console.log(data);
                 $.each(data, function (i, item) {
                     $("select#cityId").append(`<option value="${item.value}">${item.text}</option>`);
                 });
        });
    })
         
</script>
}

